==8425== Memcheck, a memory error detector
==8425== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==8425== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==8425== Command: ./student.out t inputs/02-godfather.txt-huff
==8425== Parent PID: 8424
==8425== 
--8425-- 
--8425-- Valgrind options:
--8425--    --tool=memcheck
--8425--    --leak-check=full
--8425--    --verbose
--8425--    --log-file=memcheck.log
--8425-- Contents of /proc/version:
--8425--   Linux version 2.6.32-504.1.3.el6.x86_64 (mockbuild@x86-022.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri Oct 31 11:37:10 EDT 2014
--8425-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--8425-- Page sizes: currently 4096, max supported 4096
--8425-- Valgrind library directory: /usr/lib64/valgrind
--8425-- Reading syms from /tmp/.Nl0ulY/student.out
--8425-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--8425--    object doesn't have a dynamic symbol table
--8425-- Reading syms from /lib64/ld-2.12.so
--8425--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--8425--   .. build-id is valid
--8425-- Scheduler: using generic scheduler lock implementation.
--8425-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==8425== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-8425-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==8425== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-8425-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==8425== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-8425-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==8425== 
==8425== TO CONTROL THIS PROCESS USING vgdb (which you probably
==8425== don't want to do, unless you know exactly what you're doing,
==8425== or are doing some strange experiment):
==8425==   /usr/lib64/valgrind/../../bin/vgdb --pid=8425 ...command...
==8425== 
==8425== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==8425==   /path/to/gdb ./student.out
==8425== and then give GDB the following command
==8425==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=8425
==8425== --pid is optional if only one valgrind process is running
==8425== 
--8425-- REDIR: 0x398ac17610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--8425-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--8425-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--8425-- REDIR: 0x398ac17480 (index) redirected to 0x4a07c30 (index)
--8425-- REDIR: 0x398ac17500 (strcmp) redirected to 0x4a08570 (strcmp)
--8425-- Reading syms from /lib64/libc-2.12.so
--8425--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--8425--   .. build-id is valid
--8425-- REDIR: 0x398b084cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8425-- REDIR: 0x398b086f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8425-- REDIR: 0x398b082c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--8425-- REDIR: 0x398b07f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8425-- REDIR: 0x398b128420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--8425-- REDIR: 0x398b08aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--8425-- REDIR: 0x398b084500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--8425-- REDIR: 0x398b07b520 (free) redirected to 0x4a063a9 (free)
--8425-- REDIR: 0x398b07a640 (malloc) redirected to 0x4a069ac (malloc)
==8425== Invalid read of size 8
==8425==    at 0x400C7C: Stack_pushFront (answer11.c:78)
==8425==    by 0x400D3A: Stack_popPopCombinePush (answer11.c:96)
==8425==    by 0x400DBF: HuffTree_readTextHeader (answer11.c:117)
==8425==    by 0x401DFC: process_file (example.c:27)
==8425==    by 0x401FCA: main (example.c:81)
==8425==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8425== 
==8425== 
==8425== Process terminating with default action of signal 11 (SIGSEGV)
==8425==  Access not within mapped region at address 0x0
==8425==    at 0x400C7C: Stack_pushFront (answer11.c:78)
==8425==    by 0x400D3A: Stack_popPopCombinePush (answer11.c:96)
==8425==    by 0x400DBF: HuffTree_readTextHeader (answer11.c:117)
==8425==    by 0x401DFC: process_file (example.c:27)
==8425==    by 0x401FCA: main (example.c:81)
==8425==  If you believe this happened as a result of a stack
==8425==  overflow in your program's main thread (unlikely but
==8425==  possible), you can try to increase the size of the
==8425==  main thread stack using the --main-stacksize= flag.
==8425==  The main thread stack size used in this run was 10485760.
==8425== 
==8425== HEAP SUMMARY:
==8425==     in use at exit: 1,560 bytes in 43 blocks
==8425==   total heap usage: 83 allocs, 40 frees, 2,200 bytes allocated
==8425== 
==8425== Searching for pointers to 43 not-freed blocks
==8425== Checked 70,080 bytes
==8425== 
==8425== 24 bytes in 1 blocks are definitely lost in loss record 2 of 5
==8425==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==8425==    by 0x400AEE: HuffNode_create (answer11.c:21)
==8425==    by 0x400D52: HuffTree_readTextHeader (answer11.c:101)
==8425==    by 0x401DFC: process_file (example.c:27)
==8425==    by 0x401FCA: main (example.c:81)
==8425== 
==8425== LEAK SUMMARY:
==8425==    definitely lost: 24 bytes in 1 blocks
==8425==    indirectly lost: 0 bytes in 0 blocks
==8425==      possibly lost: 0 bytes in 0 blocks
==8425==    still reachable: 1,536 bytes in 42 blocks
==8425==         suppressed: 0 bytes in 0 blocks
==8425== Reachable blocks (those to which a pointer was found) are not shown.
==8425== To see them, rerun with: --leak-check=full --show-reachable=yes
==8425== 
==8425== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==8425== 
==8425== 1 errors in context 1 of 2:
==8425== Invalid read of size 8
==8425==    at 0x400C7C: Stack_pushFront (answer11.c:78)
==8425==    by 0x400D3A: Stack_popPopCombinePush (answer11.c:96)
==8425==    by 0x400DBF: HuffTree_readTextHeader (answer11.c:117)
==8425==    by 0x401DFC: process_file (example.c:27)
==8425==    by 0x401FCA: main (example.c:81)
==8425==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8425== 
--8425-- 
--8425-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--8425-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==8425== 
==8425== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
