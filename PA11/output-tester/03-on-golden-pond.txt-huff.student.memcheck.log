==16828== Memcheck, a memory error detector
==16828== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==16828== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==16828== Command: ./student.out t inputs/03-on-golden-pond.txt-huff
==16828== Parent PID: 16827
==16828== 
--16828-- 
--16828-- Valgrind options:
--16828--    --tool=memcheck
--16828--    --leak-check=full
--16828--    --verbose
--16828--    --log-file=memcheck.log
--16828-- Contents of /proc/version:
--16828--   Linux version 2.6.32-504.1.3.el6.x86_64 (mockbuild@x86-022.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri Oct 31 11:37:10 EDT 2014
--16828-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--16828-- Page sizes: currently 4096, max supported 4096
--16828-- Valgrind library directory: /usr/lib64/valgrind
--16828-- Reading syms from /tmp/.Nl0ulY/student.out
--16828-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--16828--    object doesn't have a dynamic symbol table
--16828-- Reading syms from /lib64/ld-2.12.so
--16828--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--16828--   .. build-id is valid
--16828-- Scheduler: using generic scheduler lock implementation.
--16828-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==16828== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16828-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==16828== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16828-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==16828== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16828-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==16828== 
==16828== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16828== don't want to do, unless you know exactly what you're doing,
==16828== or are doing some strange experiment):
==16828==   /usr/lib64/valgrind/../../bin/vgdb --pid=16828 ...command...
==16828== 
==16828== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16828==   /path/to/gdb ./student.out
==16828== and then give GDB the following command
==16828==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=16828
==16828== --pid is optional if only one valgrind process is running
==16828== 
--16828-- REDIR: 0x398ac17610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--16828-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--16828-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--16828-- REDIR: 0x398ac17480 (index) redirected to 0x4a07c30 (index)
--16828-- REDIR: 0x398ac17500 (strcmp) redirected to 0x4a08570 (strcmp)
--16828-- Reading syms from /lib64/libc-2.12.so
--16828--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--16828--   .. build-id is valid
--16828-- REDIR: 0x398b084cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16828-- REDIR: 0x398b086f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16828-- REDIR: 0x398b082c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--16828-- REDIR: 0x398b07f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16828-- REDIR: 0x398b128420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--16828-- REDIR: 0x398b08aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--16828-- REDIR: 0x398b084500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--16828-- REDIR: 0x398b07b520 (free) redirected to 0x4a063a9 (free)
--16828-- REDIR: 0x398b07a640 (malloc) redirected to 0x4a069ac (malloc)
==16828== Invalid read of size 8
==16828==    at 0x400C7C: Stack_pushFront (answer11.c:78)
==16828==    by 0x400D3A: Stack_popPopCombinePush (answer11.c:96)
==16828==    by 0x400DBF: HuffTree_readTextHeader (answer11.c:117)
==16828==    by 0x401DFC: process_file (example.c:27)
==16828==    by 0x401FCA: main (example.c:81)
==16828==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==16828== 
==16828== 
==16828== Process terminating with default action of signal 11 (SIGSEGV)
==16828==  Access not within mapped region at address 0x0
==16828==    at 0x400C7C: Stack_pushFront (answer11.c:78)
==16828==    by 0x400D3A: Stack_popPopCombinePush (answer11.c:96)
==16828==    by 0x400DBF: HuffTree_readTextHeader (answer11.c:117)
==16828==    by 0x401DFC: process_file (example.c:27)
==16828==    by 0x401FCA: main (example.c:81)
==16828==  If you believe this happened as a result of a stack
==16828==  overflow in your program's main thread (unlikely but
==16828==  possible), you can try to increase the size of the
==16828==  main thread stack using the --main-stacksize= flag.
==16828==  The main thread stack size used in this run was 10485760.
==16828== 
==16828== HEAP SUMMARY:
==16828==     in use at exit: 2,040 bytes in 63 blocks
==16828==   total heap usage: 123 allocs, 60 frees, 3,000 bytes allocated
==16828== 
==16828== Searching for pointers to 63 not-freed blocks
==16828== Checked 70,400 bytes
==16828== 
==16828== 24 bytes in 1 blocks are definitely lost in loss record 2 of 5
==16828==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==16828==    by 0x400AEE: HuffNode_create (answer11.c:21)
==16828==    by 0x400D52: HuffTree_readTextHeader (answer11.c:101)
==16828==    by 0x401DFC: process_file (example.c:27)
==16828==    by 0x401FCA: main (example.c:81)
==16828== 
==16828== LEAK SUMMARY:
==16828==    definitely lost: 24 bytes in 1 blocks
==16828==    indirectly lost: 0 bytes in 0 blocks
==16828==      possibly lost: 0 bytes in 0 blocks
==16828==    still reachable: 2,016 bytes in 62 blocks
==16828==         suppressed: 0 bytes in 0 blocks
==16828== Reachable blocks (those to which a pointer was found) are not shown.
==16828== To see them, rerun with: --leak-check=full --show-reachable=yes
==16828== 
==16828== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==16828== 
==16828== 1 errors in context 1 of 2:
==16828== Invalid read of size 8
==16828==    at 0x400C7C: Stack_pushFront (answer11.c:78)
==16828==    by 0x400D3A: Stack_popPopCombinePush (answer11.c:96)
==16828==    by 0x400DBF: HuffTree_readTextHeader (answer11.c:117)
==16828==    by 0x401DFC: process_file (example.c:27)
==16828==    by 0x401FCA: main (example.c:81)
==16828==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==16828== 
--16828-- 
--16828-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--16828-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==16828== 
==16828== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
