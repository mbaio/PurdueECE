==17310== Memcheck, a memory error detector
==17310== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==17310== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==17310== Command: ./student.out b inputs/08-gophers.bit-huff
==17310== Parent PID: 17308
==17310== 
--17310-- 
--17310-- Valgrind options:
--17310--    --tool=memcheck
--17310--    --leak-check=full
--17310--    --verbose
--17310--    --log-file=memcheck.log
--17310-- Contents of /proc/version:
--17310--   Linux version 2.6.32-504.1.3.el6.x86_64 (mockbuild@x86-022.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri Oct 31 11:37:10 EDT 2014
--17310-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--17310-- Page sizes: currently 4096, max supported 4096
--17310-- Valgrind library directory: /usr/lib64/valgrind
--17310-- Reading syms from /tmp/.Nl0ulY/student.out
--17310-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--17310--    object doesn't have a dynamic symbol table
--17310-- Reading syms from /lib64/ld-2.12.so
--17310--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--17310--   .. build-id is valid
--17310-- Scheduler: using generic scheduler lock implementation.
--17310-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==17310== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-17310-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==17310== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-17310-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==17310== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-17310-by-mbaio-on-ecegrid-thin5.ecn.purdue.edu
==17310== 
==17310== TO CONTROL THIS PROCESS USING vgdb (which you probably
==17310== don't want to do, unless you know exactly what you're doing,
==17310== or are doing some strange experiment):
==17310==   /usr/lib64/valgrind/../../bin/vgdb --pid=17310 ...command...
==17310== 
==17310== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==17310==   /path/to/gdb ./student.out
==17310== and then give GDB the following command
==17310==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=17310
==17310== --pid is optional if only one valgrind process is running
==17310== 
--17310-- REDIR: 0x398ac17610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--17310-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--17310-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--17310-- REDIR: 0x398ac17480 (index) redirected to 0x4a07c30 (index)
--17310-- REDIR: 0x398ac17500 (strcmp) redirected to 0x4a08570 (strcmp)
--17310-- Reading syms from /lib64/libc-2.12.so
--17310--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--17310--   .. build-id is valid
--17310-- REDIR: 0x398b084cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17310-- REDIR: 0x398b086f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17310-- REDIR: 0x398b082c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--17310-- REDIR: 0x398b07f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17310-- REDIR: 0x398b128420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--17310-- REDIR: 0x398b08aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--17310-- REDIR: 0x398b084500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--17310-- REDIR: 0x398b07b520 (free) redirected to 0x4a063a9 (free)
--17310-- REDIR: 0x398b07a640 (malloc) redirected to 0x4a069ac (malloc)
--17310-- REDIR: 0x398b081160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
--17310-- REDIR: 0x398b07a280 (calloc) redirected to 0x4a05717 (calloc)
--17310-- REDIR: 0x398b089670 (memcpy) redirected to 0x4a08b60 (memcpy)
==17310== 
==17310== HEAP SUMMARY:
==17310==     in use at exit: 592 bytes in 2 blocks
==17310==   total heap usage: 4 allocs, 2 frees, 624 bytes allocated
==17310== 
==17310== Searching for pointers to 2 not-freed blocks
==17310== Checked 69,408 bytes
==17310== 
==17310== 24 bytes in 1 blocks are definitely lost in loss record 1 of 2
==17310==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==17310==    by 0x400E0D: HuffTree_readBinaryHeader (answer11.c:127)
==17310==    by 0x401E0E: process_file (example.c:29)
==17310==    by 0x401FCA: main (example.c:81)
==17310== 
==17310== LEAK SUMMARY:
==17310==    definitely lost: 24 bytes in 1 blocks
==17310==    indirectly lost: 0 bytes in 0 blocks
==17310==      possibly lost: 0 bytes in 0 blocks
==17310==    still reachable: 568 bytes in 1 blocks
==17310==         suppressed: 0 bytes in 0 blocks
==17310== Reachable blocks (those to which a pointer was found) are not shown.
==17310== To see them, rerun with: --leak-check=full --show-reachable=yes
==17310== 
==17310== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
--17310-- 
--17310-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--17310-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==17310== 
==17310== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
